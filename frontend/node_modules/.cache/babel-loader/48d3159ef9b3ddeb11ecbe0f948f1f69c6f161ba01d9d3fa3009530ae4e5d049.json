{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"./Navbar\";\n//  import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// import {  toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// function Courses() {\n\n//   const [courses, setCourses] = useState([]);\n//   const userId = localStorage.getItem(\"id\");\n//    const navigate = useNavigate();\n//    const[enrolled , SetEnrolled] = useState([]);\n//    const authToken = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:8080/api/courses\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setCourses(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//       });\n//       const userId = localStorage.getItem(\"id\");\n//       if(userId){\n//         fetch(`http://localhost:8080/api/learning/${userId}`)\n//           .then((response) => response.json())\n//           .then((data) => {\n//             console.log(data);\n//             let arr = [];\n//             for (let i=0;i<data.length ;i++){\n//               arr.push(data[i].course_id);\n//             }\n//             SetEnrolled(arr);\n//           })\n//           .catch((error) => {\n//             console.error(\"Error fetching data:\", error);\n//           });\n//         }\n//   }, []);\n\n//   function enrollCourse(courseId) {\n//     if(authToken){\n//       const enrollRequest = {\n//         userId: userId,\n//         courseId: courseId\n//      };\n//       axios.post('http://localhost:8080/api/learning', enrollRequest)\n//           .then((response) => {\n//             if(response.data == \"Enrolled successfully\"){\n//               toast.success('Course Enrolled successfully', {\n//                 position: 'top-right',\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: false,\n//                 draggable: false,\n//               });\n//               setTimeout(()=>{\n//                 navigate(`/course/${courseId}`);\n//               },2000);\n//             }\n//           })\n//           .catch((error) => {\n//               console.error('Enrollment error:', error);\n//           });\n//     }else{\n//       toast.error('You need to login to continue', {\n//         position: 'top-right',\n//         autoClose: 1000,\n//         hideProgressBar: false,\n//         closeOnClick: true,\n//         pauseOnHover: false,\n//         draggable: false,\n//       });\n//       setTimeout(()=>{\n//         navigate('/login');\n//       },2000);\n//     }\n\n//  }\n\n// return (\n// <div>\n//   <Navbar page={\"courses\"}/>\n//      <div className=\"courses-container\" style={{marginTop :\"20px\"}}>\n//       {courses.map((course) => (\n//         <div key={course.course_id} className=\"course-card\">\n\n//             <img src={course.p_link} alt={course.course_name} className=\"course-image\" />\n//             <div className=\"course-details\">\n//               <h3 className=\"course-heading\">\n//                 {course.courseName.length < 8\n//                   ? `${course.courseName} Tutorial`\n//                   : course.courseName\n//                 }\n//               </h3>\n//               <p className=\"course-description\" style={{color:\"grey\"}}>Price: Rs.{course.price}</p>\n//               <p className=\"course-description\">Tutorial by {course.instructor}</p>\n//             </div> \n//           {enrolled.includes(course.course_id) ? (<button className=\"enroll-button\" style={{color:'#F4D03F',backgroundColor:'darkblue',fontWeight:'bold'}} onClick={() => navigate(\"/learnings\")}>\n//             Enrolled\n//           </button> ):(<button className=\"enroll-button\" onClick={() => enrollCourse(course.course_id)}>\n//             Enroll\n//           </button> )}\n//         </div>\n//       ))}\n//      </div>\n//     </div>\n//   );\n// }\n\n// export default Courses;","map":{"version":3,"names":[],"sources":["C:/Users/Lenovo/Downloads/Learning-Management-System-main/Learning-Management-System-main/frontend/src/Components/Courses.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"./Navbar\";\n//  import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// import {  toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// function Courses() {\n\n//   const [courses, setCourses] = useState([]);\n//   const userId = localStorage.getItem(\"id\");\n//    const navigate = useNavigate();\n//    const[enrolled , SetEnrolled] = useState([]);\n//    const authToken = localStorage.getItem('token');\n  \n//   useEffect(() => {\n//     fetch(\"http://localhost:8080/api/courses\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setCourses(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//       });\n//       const userId = localStorage.getItem(\"id\");\n//       if(userId){\n//         fetch(`http://localhost:8080/api/learning/${userId}`)\n//           .then((response) => response.json())\n//           .then((data) => {\n//             console.log(data);\n//             let arr = [];\n//             for (let i=0;i<data.length ;i++){\n//               arr.push(data[i].course_id);\n//             }\n//             SetEnrolled(arr);\n//           })\n//           .catch((error) => {\n//             console.error(\"Error fetching data:\", error);\n//           });\n//         }\n//   }, []);\n\n//   function enrollCourse(courseId) {\n//     if(authToken){\n//       const enrollRequest = {\n//         userId: userId,\n//         courseId: courseId\n//      };\n//       axios.post('http://localhost:8080/api/learning', enrollRequest)\n//           .then((response) => {\n//             if(response.data == \"Enrolled successfully\"){\n//               toast.success('Course Enrolled successfully', {\n//                 position: 'top-right',\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: false,\n//                 draggable: false,\n//               });\n//               setTimeout(()=>{\n//                 navigate(`/course/${courseId}`);\n//               },2000);\n//             }\n//           })\n//           .catch((error) => {\n//               console.error('Enrollment error:', error);\n//           });\n//     }else{\n//       toast.error('You need to login to continue', {\n//         position: 'top-right',\n//         autoClose: 1000,\n//         hideProgressBar: false,\n//         closeOnClick: true,\n//         pauseOnHover: false,\n//         draggable: false,\n//       });\n//       setTimeout(()=>{\n//         navigate('/login');\n//       },2000);\n//     }\n    \n//  }\n\n\n// return (\n// <div>\n//   <Navbar page={\"courses\"}/>\n//      <div className=\"courses-container\" style={{marginTop :\"20px\"}}>\n//       {courses.map((course) => (\n//         <div key={course.course_id} className=\"course-card\">\n          \n//             <img src={course.p_link} alt={course.course_name} className=\"course-image\" />\n//             <div className=\"course-details\">\n//               <h3 className=\"course-heading\">\n//                 {course.courseName.length < 8\n//                   ? `${course.courseName} Tutorial`\n//                   : course.courseName\n//                 }\n//               </h3>\n//               <p className=\"course-description\" style={{color:\"grey\"}}>Price: Rs.{course.price}</p>\n//               <p className=\"course-description\">Tutorial by {course.instructor}</p>\n//             </div> \n//           {enrolled.includes(course.course_id) ? (<button className=\"enroll-button\" style={{color:'#F4D03F',backgroundColor:'darkblue',fontWeight:'bold'}} onClick={() => navigate(\"/learnings\")}>\n//             Enrolled\n//           </button> ):(<button className=\"enroll-button\" onClick={() => enrollCourse(course.course_id)}>\n//             Enroll\n//           </button> )}\n//         </div>\n//       ))}\n//      </div>\n//     </div>\n//   );\n// }\n\n// export default Courses;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}